---
- name: Ensure all services are available
  hosts: hng
  gather_facts: yes
  become: yes
  vars:
    app_port: 3000
    app_host: "127.0.0.1"
    pg_user: postgres
    pg_password: securepassword
    pg_password_file: /var/secrets/pg_pw.txt
    pg_database: postgres
    pg_host: localhost
    db_host: "localhost"
    smtp_user: "adesdorcas@gmail.com"
        
  tasks:
    - name: Ensure Nginx service is enabled and started
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Check PostgreSQL service status
      command: systemctl is-active postgresql
      register: postgresql_status
      changed_when: false

    - name: Check Node.js application status
      command: lsof -i :{{ app_port }}
      register: nodejs_status
      changed_when: false
      failed_when: false

    - name: Setup environment file
      template:
        src: templates/env.j2
        dest: /opt/stage_5b/.env
        mode: 0644

    - name: Restart Node.js application if not running
      shell: |
        cd /opt/stage_5b
        npm run start:prod
      when: nodejs_status.stdout == ""

    - name: Check Nginx service status
      command: systemctl is-active nginx
      register: nginx_status
      changed_when: false

    - name: Display PostgreSQL service status
      debug:
        msg: "PostgreSQL service is {{ postgresql_status.stdout }}"

    - name: Display Node.js application status
      debug:
        msg: "Node.js application status: {{ nodejs_status.stdout }}"

    - name: Display Nginx service status
      debug:
        msg: "Nginx service is {{ nginx_status.stdout }}"

    - name: Display environment variables
      command: printenv
      register: env_vars
      changed_when: false

    - name: Debug environment variables
      debug:
        var: env_vars.stdout_lines