---
- name: Installing rabbitMQ and Nginx services
  hosts: hng
  gather_facts: yes
  become: yes
  vars:
    rabbitmq_version: "3.8"
    nginx_conf: "/etc/nginx/sites-available/default"
    log_dir: "/var/log/stage_5b"
    out_log: "/var/log/stage_5b/out.log"
    error_log: "/var/log/stage_5b/error.log"
    hng_user: "hng"
    app_port: 3000
    app_host: "127.0.0.1"

  tasks:
    - name: Install and configure RabbitMQ
      block:
        - name: Install RabbitMQ
          apt:
            name: rabbitmq-server
            state: present

        - name: Ensure RabbitMQ is running
          systemd:
            name: rabbitmq-server
            state: started
            enabled: yes

    - name: Install Nginx
      apt:
        name: nginx=1.26.*
        state: present

    - name: Ensure Nginx configuration directory exists
      file:
        path: /etc/nginx/sites-available
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Configure Nginx to reverse proxy
      copy:
        dest: /etc/nginx/sites-available/default
        content: |
          server {
              listen 80;
              server_name ec2-54-158-143-47.compute-1.amazonaws.com;

              location / {
                  proxy_pass http://{{ app_host }}:{{ app_port }};
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }
              error_log /var/log/stage_5b/error.log;
              access_log /var/log/stage_5b/out.log;
          }

    - name: Ensure Nginx service is enabled and started
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Create stdout log file
      file:
        path: "{{ out_log }}"
        state: touch
        owner: "{{ hng_user }}"
        group: "{{ hng_user }}"
        mode: '0644'

    - name: Create stderr log file
      file:
        path: "{{ error_log }}"
        state: touch
        owner: "{{ hng_user }}"
        group: "{{ hng_user }}"
        mode: '0644'

    - name: Redirect stdout and stderr to log files
      shell: |
        exec > >(tee -a {{ out_log }} )
        exec 2> >(tee -a {{ error_log }} >&2 )
      args:
        executable: /bin/bash
      async: 0
      poll: 0