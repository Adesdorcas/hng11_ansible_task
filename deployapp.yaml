---
- name: Setup and deploy NestJS application
  hosts: test
  become: yes

  vars:
    node_version: "16.x"
    app_name: "hng_boilerplate_nestjs"
    app_repo_url: "https://github.com/hngprojects/hng_boilerplate_nestjs.git"
    app_directory: "/opt/stage_5b"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - curl
          - git
          - build-essential
        state: present

    - name: Check if Node.js is installed
      command: node -v
      register: node_version_output
      ignore_errors: yes

    - name: Remove existing Node.js
      apt:
        name: nodejs
        state: absent
      when: node_version_output.rc == 0

    - name: Add NodeSource repository for Node.js 16.x
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_16.x {{ ansible_distribution_release }} main"
        state: present
        update_cache: yes
        filename: nodesource

    - name: Install Node.js
      apt:
        name: nodejs
        state: present

    - name: Install global npm packages
      npm:
        name: "{{ item }}"
        state: present
        global: yes
      loop:
        - npm
        - "@nestjs/cli"
        - typescript
        - ts-node
        - ts-node-dev
        - typeorm

    - name: Change to application directory
      shell: cd "{{ app_directory }}"
      args:
        chdir: "{{ app_directory }}"

    - name: Create app.env file
      copy:
        dest: "{{ app_dir }}/app.env"
        content: |
          PROFILE=local
          NODE_ENV=development

          PORT=3000

          DB_USERNAME=postgres
          DB_PASSWORD=securepassword
          DB_DATABASE=database
          DB_HOST=localhost
          DB_PORT=5432
          DB_ENTITIES=dist/src/modules/**/entities/**/*.entity{.ts,.js}

          DB_MIGRATIONS=dist/**/migrations/*{.ts,.js}
          DB_TYPE=postgres
          DB_SSL=true

          JWT_SECRET=someSecrets
          JWT_EXPIRY_TIMEFRAME=3600
        owner: hng
        group: hng
        mode: '0600'
    
    - name: Install application dependencies
      npm:
        path: "{{ app_directory }}"
        state: present

    - name: Build the application
      shell: npm run build
      args:
        chdir: "{{ app_directory }}"

    - name: Create systemd service file for the application
      copy:
        dest: /etc/systemd/system/{{ app_name }}.service
        content: |
          [Unit]
          Description=NestJS Application
          After=network.target

          [Service]
          ExecStart=/usr/bin/node {{ app_directory }}/dist/src/main.js
          Restart=always
          User=nobody
          Group=nogroup
          Environment=NODE_ENV=production
          WorkingDirectory={{ app_directory }}

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd to apply new service
      systemd:
        daemon_reload: yes

    - name: Enable and start the NestJS application service
      systemd:
        name: "{{ app_name }}"
        enabled: yes
        state: started