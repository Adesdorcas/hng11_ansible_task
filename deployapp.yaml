---
- name: Setup and deploy NestJS application
  hosts: hng
  become: yes

  vars:
    repo_url: "https://github.com/hngprojects/hng_boilerplate_nestjs"
    branch: "devops"
    node_version: "16.x"
    app_name: "hng_boilerplate_nestjs"
    app_dir: "/opt/stage_5b"
    hng_user: "hng"
    app_port: 3000
    app_host: "127.0.0.1"
    db_port: 5432
    pg_user: postgres
    pg_password: securepassword
    pg_database: postgres
    smtp_host: smtp.gmail.com
    env_file_path: "/opt/stage_5b/.env"
    jwt_secret: "gsgs"
    jwt_expiry_timeframe: "1500000"
    jwt_refresh_secret: "bbp"
    jwt_refresh_expiry_timeframe: "15"

  tasks:
  #  - name: Create a user named hng with sudo privileges
  #    user:
  #      name: hng
  #      state: present
  #      create_home: yes
  #      groups: sudo, hng
  #      append: yes
#
  #  - name: Create application directory
  #    file:
  #      path: "{{ item }}"
  #      state: directory
  #      owner: hng
  #      group: hng
  #      mode: '0755'
  #    loop:
  #      - /opt/stage_5b
  #      - "{{ app_dir }}"
#
  #  - name: Clone the application repository
  #    git:
  #      repo: "{{ repo_url }}"
  #      dest: "{{ app_dir }}"
  #      version: "{{ branch }}"
  #      force: yes
#
  #  - name: Install required packages
  #    apt:
  #      name:
  #        - curl
  #        - git
  #        - build-essential
  #      state: present
#
  #  - name: Check if Node.js is installed
  #    command: node -v
  #    register: node_version_output
  #    ignore_errors: yes
#
  #  - name: Remove existing Node.js
  #    apt:
  #      name: nodejs
  #      state: absent
  #    when: node_version_output.rc == 0
#
  #  - name: Add NodeSource repository for Node.js 16.x
  #    apt_repository:
  #      repo: "deb https://deb.nodesource.com/node_16.x {{ ansible_distribution_release }} main"
  #      state: present
  #      update_cache: yes
  #      filename: nodesource
#
  #  - name: Install Node.js
  #    apt:
  #      name: nodejs
  #      state: present
#
  #  - name: Install global npm packages
  #    npm:
  #      name: "{{ item }}"
  #      state: present
  #      global: yes
  #    loop:
  #      - npm
  #      - "@nestjs/cli"
  #      - typescript
  #      - ts-node
  #      - ts-node-dev
  #      - typeorm
#
    - name: Change to application directory
      shell: cd "{{ app_dir }}"
      args:
        chdir: "{{ app_dir }}"

    - name: Setup environment file
      template:
        src: templates/env.j2
        dest: /opt/stage_5b/.env
        mode: 0644
    
    - name: Install application dependencies
      npm:
        path: "{{ app_dir }}"
        state: present

    - name: Build the application
      shell: npm run build
      args:
        chdir: "{{ app_dir }}"

    - name: Install PM2 globally
      npm:
        name: pm2
        global: yes
        state: present

    - name: Start the application with PM2
      shell: |
        pm2 start /opt/stage_5b/dist/src/main.js --name "nestjsapp" --env production
      environment:
        TYPEORM_CONNECTION: postgres
        TYPEORM_ENTITIES: dist/**/*.entity.js
        TYPEORM_MIGRATIONS: dist/migrations/*.js
        TYPEORM_HOST: 127.0.0.1
        TYPEORM_PORT: 5432
        TYPEORM_USERNAME: {{ pg_user }}
        TYPEORM_PASSWORD: {{ pg_password }}
        TYPEORM_DATABASE: {{ pg_database }}

    - name: Configure Nginx
      copy:
        dest: /etc/nginx/sites-available/nestjsapp
        content: |
          server {
              listen 80;
              server_name ec2-54-158-143-47.compute-1.amazonaws.com;

              location / {
                  proxy_pass http://{{ app_host }}:{{ app_port }};
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
              error_log /var/log/stage_5b/error.log;
              access_log /var/log/stage_5b/out.log;
          }
        notify: 
          - Restart Nginx

    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/nestjsapp
        dest: /etc/nginx/sites-enabled/nestjsapp
        state: link

    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted