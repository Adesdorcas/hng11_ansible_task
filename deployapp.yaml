---
- name: Setup and deploy NestJS application
  hosts: hng
  become: yes

  vars:
    repo_url: "https://github.com/hngprojects/hng_boilerplate_nestjs"
    branch: "devops"
    app_name: "hng_boilerplate_nestjs"
    app_dir: "/opt/stage_5b"
    hng_user: "hng"
    app_port: 3000
    app_host: "127.0.0.1"
    db_port: 5432
    pg_user: postgres
    pg_password: securepassword
    pg_database: postgres
    smtp_host: smtp.gmail.com
    env_file_path: "/opt/stage_5b/.env"
    jwt_secret: "gsgs"
    jwt_expiry_timeframe: "1500000"
    jwt_refresh_secret: "bbp"
    jwt_refresh_expiry_timeframe: "15"

  tasks:
    - name: Create a user named hng with sudo privileges
      user:
        name: hng
        state: present
        create_home: yes
        groups: sudo
        append: yes

    - name: Create application directory
      file:
        path: "{{ item }}"
        state: directory
        owner: hng
        group: hng
        mode: '0755'
      loop:
        - /opt/stage_5b
        - "{{ app_dir }}"

    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Add NodeSource repository for Node.js 18.x
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_18.x {{ ansible_distribution_release }} main"
        state: present
        update_cache: yes
        filename: nodesource

    - name: Install necessary packages
      apt:
        name:
          - git
          - postgresql
          - nginx
          - rabbitmq-server
          - nodejs
        state: present

    - name: Check if repository already exists
      stat:
        path: "{{ app_dir }}/.git"
      register: repo_exists

    - name: Clone the boilerplate repository
      git:
        repo: https://github.com/hngprojects/hng_boilerplate_nestjs.git
        dest: "{{ app_dir }}"
        version: devops
      become: yes 
      become_user: root 
      when: not repo_exists.stat.exists

    - name: Change ownership of the application directory
      file:
        path: "{{ app_dir }}"
        owner: hng
        group: hng
        recurse: yes

    - name: Set correct permissions for app directory
      file:
        path: "{{ app_dir }}"
        owner: hng
        group: hng
        mode: '0755'
        recurse: yes
    
    - name: Setup environment file
      template:
        src: templates/env.j2
        dest: /opt/stage_5b/.env
        mode: 0644

    - name: Install application dependencies
      shell: |
        su - hng -c "cd {{ app_dir }} && npm install"
      args:
        executable: /bin/bash
      become: yes

    - name: Ensure application runs on port 3000
      shell: |
        su - hng -c "cd {{ app_dir }} && nohup npm start > {{ log_dir }}/out.log 2> {{ log_dir }}/error.log &"
      args:
        executable: /bin/bash
      become: yes
    
#- name: Install application dependencies
#  npm:
#    path: "{{ app_dir }}"
#    state: present
#
#- name: Build the application
#  shell: npm run build
#  args:
#    chdir: "{{ app_dir }}"
#
#- name: Install PM2 globally
#  npm:
#    name: pm2
#    global: yes
#    state: present
#
#- name: Start the application with PM2
#  shell: |
#    pm2 start /opt/stage_5b/dist/src/main.js --name "nestjsapp" --env production
#  environment:
#    TYPEORM_CONNECTION: "postgres"
#    TYPEORM_ENTITIES: "dist/**/*.entity.js"
#    TYPEORM_MIGRATIONS: "dist/migrations/*.js"
#    TYPEORM_HOST: "127.0.0.1"
#    TYPEORM_PORT: "5432"
#    TYPEORM_USERNAME: "{{ pg_user }}"
#    TYPEORM_PASSWORD: "{{ pg_password }}"
#    TYPEORM_DATABASE: "{{ pg_database }}"
#
    - name: Install Nginx
      apt:
        name: nginx=1.26.*
        state: present
 
    - name: Ensure Nginx configuration directory exists
      file:
        path: /etc/nginx/sites-available
        state: directory
        owner: root
        group: root
        mode: '0755'
    
    - name: Configure Nginx
      copy:
        dest: /etc/nginx/sites-available/nestjsapp
        content: |
          server {
              listen 80;
              server_name ec2-54-158-143-47.compute-1.amazonaws.com;

              location / {
                  proxy_pass http://{{ app_host }}:{{ app_port }};
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
              error_log /var/log/stage_5b/error.log;
              access_log /var/log/stage_5b/out.log;
          }
        notify: 
          - Restart Nginx

    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/nestjsapp
        dest: /etc/nginx/sites-enabled/nestjsapp
        state: link

    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted