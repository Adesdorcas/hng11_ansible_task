- name: Setup and Deploy NestJS Boilerplate
  hosts: hng
  become: yes
  become_method: sudo
  vars:
    project_dir: /opt/stage_5b
    nginx_config_path: /etc/nginx/sites-available/default
    service_file_path: /etc/systemd/system/stage_5b.service

  tasks:
    - name: Create Ansible temporary directory
      file:
        path: /home/ubuntu/.ansible/tmp
        state: directory
        mode: '0700'
        owner: ubuntu
        group: ubuntu
      become: yes

    - name: Create hng user with sudo privileges
      user:
        name: "hng"
        shell: /bin/bash
        groups: sudo
        append: yes
      become: yes

    - name: Clone the devops branch of the repository
      git:
        repo: 'https://github.com/hngprojects/hng_boilerplate_nestjs.git'
        dest: "{{ project_dir }}"
        version: devops
      become: yes
      become_user: hng

    - name: Ensure /var/secrets directory exists
      file:
        path: /var/secrets
        state: directory
        mode: '0700'
        owner: root
        group: root
      become: yes

    - name: Install PostgreSQL
      apt:
        name: postgresql
        state: present
      become: yes

    - name: Save PostgreSQL credentials
      copy:
        content: |
          admin: nextpasswd
        dest: /var/secrets/pg_pw.txt
        owner: root
        group: root
        mode: '0600'
      become: yes

    - name: Install Node.js and npm
      apt:
        name: nodejs
        state: present
      become: yes

    - name: Install yarn globally
      npm:
        name: yarn
        global: yes
      become: yes

    - name: Install application dependencies
      command: yarn install
      args:
        chdir: "{{ project_dir }}"
      become: yes
      become_user: hng

    - name: Compile TypeScript to JavaScript
      command: yarn build
      args:
        chdir: "{{ project_dir }}"
      become: yes
      become_user: hng

    - name: Start the development server
      command: yarn dev
      args:
        chdir: "{{ project_dir }}"
      become: yes
      become_user: hng

    - name: Install Nginx
      apt:
        name: nginx
        state: present
      become: yes

    - name: Configure Nginx to reverse proxy requests from port 80 to the application
      template:
        src: nginx.conf.j2
        dest: "{{ nginx_config_path }}"
      notify: restart nginx
      become: yes

    - name: Ensure logging directories exist
      file:
        path: /var/log/stage_5b
        state: directory
        mode: '0755'
        owner: hng
        group: hng
      become: yes

    - name: Configure logging for application
      copy:
        content: |
          [Unit]
          Description=Stage 5B Application

          [Service]
          ExecStart=/usr/bin/node {{ project_dir }}/dist/main.js
          WorkingDirectory={{ project_dir }}
          Environment=NODE_ENV=production
          StandardOutput=append:/var/log/stage_5b/out.log
          StandardError=append:/var/log/stage_5b/error.log
          User=hng
          Group=hng
          Restart=always

          [Install]
          WantedBy=multi-user.target
        dest: "{{ service_file_path }}"
        mode: '0644'
      become: yes
      notify: 
        - enable and start application

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
      become: yes
    
    - name: enable and start application
      systemd:
        name: stage_5b
        enabled: yes
        state: started
      become: yes
