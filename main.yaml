---
- name: Setup and Deploy NestJS Boilerplate
  hosts: hng
  become: true
  vars:
    repo_url: "https://github.com/hngprojects/hng_boilerplate_nestjs"
    branch: "devops"
    app_dir: "/opt/stage_5b"
    pg_admin_user: "admin"
    pg_admin_password: "devopsnext"
    pg_db: "hng_db"
    node_version: "14.x"

  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install required packages
      apt:
        name:
          - git
          - npm
          - postgresql
          - postgresql-contrib
          - curl
          - gnupg2
        state: present

    - name: Clone the repository
      git:
        repo: "{{ repo_url }}"
        dest: "{{ app_dir }}"
        version: "{{ branch }}"
        force: yes

    - name: Create hng user with sudo privileges
      user:
        name: hng
        groups: sudo
        append: yes
        shell: /bin/bash

    - name: Change ownership of /opt/stage_5b
      file:
        path: /opt/stage_5b
        owner: hng
        group: hng
        recurse: yes
    
    - name: Ensure hng user exists
      user:
        name: hng
        state: present
        create_home: yes

    - name: Install dependencies
      become_user: hng
      npm:
        path: /opt/stage_5b
        state: present

    - name: Install PostgreSQL
      apt:
        name: postgresql-14
        state: present

    - name: Configure PostgreSQL
      become_user: postgres
      postgresql_db:
        name: stage_5b
        state: present

    - name: Save admin user and credentials
      copy:
        content: "hng:password"
        dest: /var/secrets/pg_pw.txt
        owner: hng
        group: hng
        mode: '0600'

    - name: Install RabbitMQ
      apt:
        name: rabbitmq-server
        state: present
    
    - name: Install Nginx 1.26
      apt:
        name: nginx=1.26*
        state: present

    - name: Setup Nginx to reverse proxy application to port 80
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/sites-available/default
      notify: restart nginx
      
    - name: Start application 
      become_user: hng
      shell:
        cmd: npm run start
        chdir: /opt/stage_5b

    handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted

    - name: Create log directory
      file:
        path: /var/log/stage_5b
        state: directory
        owner: hng
        group: hng

    - name: Configure stderr logging
      copy:
        content: ""
        dest: /var/log/stage_5b/error.log
        owner: hng
        group: hng

    - name: Configure stdout logging
      copy:
        content: ""
        dest: /var/log/stage_5b/out.log
        owner: hng
        group: hng

    - name: Start application with logging
      become_user: hng
      shell:
        cmd: npm run start > /var/log/stage_5b/out.log 2> /var/log/stage_5b/error.log
        chdir: /opt/stage_5b