---
- name: Install and configure PostgreSQL
  hosts: test
  become: true

  vars:
    postgres_version: "14"
    postgres_user: "admin"
    postgres_password: "mysecurepass"
    pg_password_file: "/var/secrets/pg_pw.txt"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install PostgreSQL
      apt:
        name:
          - "postgresql-{{ postgres_version }}"
          - "postgresql-client-{{ postgres_version }}"
          - "postgresql-contrib-{{ postgres_version }}"
        state: present

    - name: Ensure PostgreSQL service is enabled and started
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Create PostgreSQL admin user
      become: yes
      become_user: postgres
      shell: |
        psql -c "DO \$\$
        BEGIN
          IF NOT EXISTS (
            SELECT FROM pg_catalog.pg_roles
            WHERE rolname = '{{ postgres_user }}') THEN
            CREATE ROLE {{ postgres_user }} LOGIN PASSWORD '{{ postgres_password }}';
            ALTER ROLE {{ postgres_user }} CREATEDB;
            ALTER ROLE {{ postgres_user }} CREATEROLE;
          END IF;
        END
        \$\$;"

    - name: Ensure /var/secrets directory exists
      file:
        path: /var/secrets
        state: directory
        mode: '0700'

    - name: Save PostgreSQL admin credentials to file
      copy:
        dest: "{{ pg_password_file }}"
        content: |
          PGUSER={{ postgres_user }}
          PGPASSWORD={{ postgres_password }}
        mode: '0600'
      become: yes
      become_user: root

    - name: Ensure proper ownership of the credentials file
      file:
        path: "{{ pg_password_file }}"
        owner: root
        group: root
        mode: '0600'
      become: yes
      become_user: root

  