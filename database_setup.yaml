---
- name: Configure an instance postgresql, RabbitMQ for the project
  hosts: test
  become: true
  vars:
    repo_url: "https://github.com/hngprojects/hng_boilerplate_nestjs"
    branch: "devops"
    app_dir: "/opt/stage_5b"
    pg_admin_user: "admin"
    pg_admin_password: "devopsnext"
    pg_db: "hng_db"
    
  tasks:
    - name: Install and configure PostgreSQL
        block:
          - name: Ensure PostgreSQL is running
            systemd:
              name: postgresql
              state: started
              enabled: yes

          - name: Set PostgreSQL admin user password
            become_user: postgres
            postgresql_user:
              name: "{{ pg_admin_user }}"
              password: "{{ pg_admin_password }}"
              role_attr_flags: "SUPERUSER,CREATEDB"

          - name: Create a database
            become_user: postgres
            postgresql_db:
              name: "{{ pg_db }}"
              owner: "{{ pg_admin_user }}"

          - name: Save PostgreSQL admin credentials
            copy:
              content: |
                POSTGRES_USER={{ pg_admin_user }}
                POSTGRES_PASSWORD={{ pg_admin_password }}
                POSTGRES_DB={{ pg_db }}
              dest: /var/secrets/pg_pw.txt
              owner: root
              group: root
              mode: '0600'

    - name: Install and configure RabbitMQ
      block:
        - name: Install RabbitMQ
          apt:
            name: rabbitmq-server
            state: present
  
        - name: Ensure RabbitMQ is running
          systemd:
            name: rabbitmq-server
            state: started
            enabled: yes
  
    - name: Install Nginx 1.26
      shell: |
        sudo apt-get install -y apt-transport-https lsb-release ca-certificates
        echo "deb http://nginx.org/packages/ubuntu `lsb_release -cs` nginx" | tee /etc/apt/sources.list.d/nginx.list
        curl -fsSL https://nginx.org/keys/nginx_signing.key | apt-key add -
        apt-get update
        apt-get install -y nginx=1.26.*
  
    - name: Configure Nginx
      block:
        - name: Remove default nginx configuration
          file:
            path: /etc/nginx/conf.d/default.conf
            state: absent
  
        - name: Create Nginx configuration for the application
          copy:
            content: |
              server {
                  listen 80;
                  server_name _;
                  location / {
                      proxy_pass http://127.0.0.1:3000;
                      proxy_http_version 1.1;
                      proxy_set_header Upgrade $http_upgrade;
                      proxy_set_header Connection 'upgrade';
                      proxy_set_header Host $host;
                      proxy_cache_bypass $http_upgrade;
                  }
              }
            dest: /etc/nginx/conf.d/stage_5b.conf
            owner: root
            group: root
            mode: '0644'
  
        - name: Restart Nginx
          systemd:
            name: nginx
            state: restarted
            enabled: yes
  
    - name: Configure logging
      block:
        - name: Create log directory
          file:
            path: /var/log/stage_5b
            state: directory
            owner: hng
            group: hng
            mode: '0755'
  
        - name: Create stderr log file
          file:
            path: /var/log/stage_5b/error.log
            state: touch
            owner: hng
            group: hng
            mode: '0644'
  
        - name: Create stdout log file
          file:
            path: /var/log/stage_5b/out.log
            state: touch
            owner: hng
            group: hng
            mode: '0644'
  